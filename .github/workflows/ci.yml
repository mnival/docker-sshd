---
name: CI/CD
'on':
  pull_request:
  push:
    branches:
      - stable

jobs:
  hadolint:
    name: Test dockerfile syntax
    runs-on: ubuntu-latest
    steps:
      - name: Check out the codebase.
        uses: actions/checkout@v3

      - name: Run hadolint.
        uses: hadolint/hadolint-action@v2.0.0
        with:
          dockerfile: Dockerfile
          ignore: DL3018

  build:
    name: Build and test docker
    permissions:
      contents: read
      id-token: write

    runs-on: ubuntu-latest
    steps:
      - name: Check out the codebase.
        uses: actions/checkout@v3

      - name: Repository Name
        run: echo "REPOSITORY_NAME=${GITHUB_REPOSITORY#*/}" >> ${GITHUB_ENV}

      - name: Vault
        uses: hashicorp/vault-action@v2
        with:
          url: ${{ secrets.VAULT_URL }}
          role: ${REPOSITORY_NAME}
          method: jwt
          jwtGithubAudience: sigstore # set the GitHub token's aud claim

      - name: Find an open port.
        run: |
          CLIENT_PORT=$(cat /dev/urandom | od -N2 -An -i | awk -v f=10000 -v r=19999 '{printf "%i\n", f + r * $1 / 65536}')
          [ $(netstat -an | grep LISTEN | grep :$CLIENT_PORT | wc -l) -eq 0 ] || { ./$0 && exit 0 || exit 1; }
          echo "CLIENT_PORT=$CLIENT_PORT" >> $GITHUB_ENV

      - name: Build docker image.
        run: docker build --no-cache --tag ${GITHUB_REPOSITORY}:${GITHUB_RUN_ID} .

      - name: Run a container of created image.
        run: |
          DOCKERCONTAINER=$(docker run -d -p 127.0.0.1:${CLIENT_PORT}:21 -e SSH_USERS="test:1000:1000" ${GITHUB_REPOSITORY}:${GITHUB_RUN_ID})
          sleep 5
          echo "DOCKERCONTAINER=$DOCKERCONTAINER" >> $GITHUB_ENV

      - name: Check if container is still running.
        run: docker ps -f id=${DOCKERCONTAINER}

      - name: Check if the port is responding.
        run: nc 127.0.0.1 ${CLIENT_PORT} < /dev/null

      - name: Check if the container is correctly stopped and removed.
        run: docker stop ${DOCKERCONTAINER} && docker rm -fv ${DOCKERCONTAINER}

      - name: Run Trivy vulnerability scanner.
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ github.repository }}:${{ github.run_id }}
          exit-code: '1'

  deploy:
    if: ${{ github.ref == 'refs/heads/stable' }}
    needs: [hadolint, build]
    name: Push to Quay
    runs-on: ubuntu-latest
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Quay
        uses: docker/login-action@v2
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_PASSWORD }}

      - name: Push to Quay
        uses: docker/build-push-action@v3
        with:
          file: ./Dockerfile
          pull: true
          push: true
          tags: quay.io/mnival/sshd:latest
